import type { GetServerSideProps, GetStaticProps, NextPage } from "next";
import Head from "next/head";
import React, { useState } from "react";
import BlogItem from "../../components/BlogItem";
import PageTitle from "../../components/PageTitle";
import { BlogsType, ProductType } from "../../components/types";
import { useRouter } from "next/router";

interface Props {
  blogs: BlogsType[];
}

const Blog: NextPage<Props> = ({ blogs }) => {
  const router = useRouter();
  const [searchInput, setSearchInput] = useState<string>("");

  return (
    <>
      <Head>
        <title>Store - Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title={"Blog"} />

      <section className="bg0 p-t-62 p-b-60">
        <div className="container">
          <div className="row">
            <div className="col-md-8 col-lg-9 p-b-80">
              <div className="p-r-45 p-r-0-lg">
                {blogs.length > 0 ? (
                  blogs.map((blog) => <BlogItem {...blog} key={blog.id} />)
                ) : (
                  <p>There are no results with your search.</p>
                )}
              </div>
            </div>

            <div className="col-md-4 col-lg-3 p-b-80">
              <div className="side-menu">
                <form
                  className="bor17 of-hidden pos-relative"
                  onSubmit={(e) => {
                    e.preventDefault()
                    router.push({
                      query: { ...router.query, search: searchInput },
                    });
                   setSearchInput("")
                  }}
                >
                  <input
                    className="stext-103 cl2 plh4 size-116 p-l-28 p-r-55"
                    type="text"
                    name="search"
                    placeholder="Search"
                    onChange={(e) => setSearchInput(e.target.value)}
                    value={searchInput}

                  />

                  <button className="flex-c-m size-122 ab-t-r fs-18 cl4 hov-cl1 trans-04">
                    <i className="zmdi zmdi-search"></i>
                  </button>
                </form>

                <div className="p-t-55">
                  <h4 className="mtext-112 cl2 p-b-33">Categories</h4>

                  <ul>
                    <li className="bor18">
                      <button
                        className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                          router.query.category === "fashion" &&
                          "filter-link-active"
                        }`}
                        onClick={(
                          event: React.MouseEvent<HTMLButtonElement, MouseEvent>
                        ) => {
                          if (router.query.category === "fashion") {
                            delete router.query.category;
                            router.push({
                              query: { ...router.query },
                            });
                          } else {
                            router.push({
                              query: { ...router.query, category: "fashion" },
                            });
                          }
                        }}
                      >
                        Fashion
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                          router.query.category === "beauty" &&
                          "filter-link-active"
                        }`}
                        onClick={(
                          event: React.MouseEvent<HTMLButtonElement, MouseEvent>
                        ) => {
                          if (router.query.category === "beauty") {
                            delete router.query.category;
                            router.push({
                              query: { ...router.query },
                            });
                          } else {
                            router.push({
                              query: { ...router.query, category: "beauty" },
                            });
                          }
                        }}
                      >
                        Beauty
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                          router.query.category === "streetstyle" &&
                          "filter-link-active"
                        }`}
                        onClick={(
                          event: React.MouseEvent<HTMLButtonElement, MouseEvent>
                        ) => {
                          if (router.query.category === "streetstyle") {
                            delete router.query.category;
                            router.push({
                              query: { ...router.query },
                            });
                          } else {
                            router.push({
                              query: {
                                ...router.query,
                                category: "streetstyle",
                              },
                            });
                          }
                        }}
                      >
                        Street Style
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                          router.query.category === "lifestyle" &&
                          "filter-link-active"
                        }`}
                        onClick={(
                          event: React.MouseEvent<HTMLButtonElement, MouseEvent>
                        ) => {
                          if (router.query.category === "lifestyle") {
                            delete router.query.category;
                            router.push({
                              query: { ...router.query },
                            });
                          } else {
                            router.push({
                              query: { ...router.query, category: "lifestyle" },
                            });
                          }
                        }}
                      >
                        Life Style
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                          router.query.category === "diy" &&
                          "filter-link-active"
                        }`}
                        onClick={(
                          event: React.MouseEvent<HTMLButtonElement, MouseEvent>
                        ) => {
                          if (router.query.category === "diy") {
                            delete router.query.category;
                            router.push({
                              query: { ...router.query },
                            });
                          } else {
                            router.push({
                              query: { ...router.query, category: "diy" },
                            });
                          }
                        }}
                      >
                        DIY & Crafts
                      </button>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
};

export default Blog;

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const category = query.category;
  const search = query.search;

  let link;
  if (category && search) {
    link = `http://localhost:5001/blogs?category_like=${category}&q=${search}`;
  } else if (category) {
    link = `http://localhost:5001/blogs?category_like=${category}`;
  } else if (search) {
    link = `http://localhost:5001/blogs?q=${search}`;
  } else {
    link = "http://localhost:5001/blogs";
  }
  const resBlogs = await fetch(link);
  const blogs: BlogsType[] = await resBlogs.json();
  return {
    props: {
      blogs,
    },
  };
};
