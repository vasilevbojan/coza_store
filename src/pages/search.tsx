import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import BlogItem from "../components/BlogItem";
import PageTitle from "../components/PageTitle";
import ProductItem from "../components/ProductItem";
import { BlogsType, ProductType } from "../components/types";


interface Props {
  blogs: BlogsType[];
  products: ProductType[]
}


const Search: NextPage<Props> = ({ blogs, products }) => {
  console.log(blogs, products)
  return (
    <>
      <Head>
        <title>Store - Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title={"Search"} />

      <div className="bg0 m-t-23 p-b-140 mt-5">
        <div className="container">
          {blogs.length > 0 && (
            <>
              <h2 className="mb-5">Blogs</h2>
              <div className="row isotope-grid">
                {blogs.map((blog) => (
                  <div className="col-4" key={blog.id}>
                    <BlogItem {...blog} />
                  </div>
                ))}

                {/* !! */}
              </div>
            </>
          )}

          {products.length > 0 && (
            <>
              <h2 className="mb-5">Products</h2>
              <div className="row isotope-grid">
                {products.map((product) => (
                  <div className="col-4" key={product.id}>
                    <ProductItem product={product} />
                  </div>
                ))}

                {/* !! */}
              </div>
            </>
          )}
        </div>
      </div>
    </>
  );
};

export default Search;

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const search = query.search;

  const resProducts = await fetch(`http://data-api-jet.vercel.app/products?q=${search}`);
  const products: ProductType[] = await resProducts.json();

  const resBlogs = await fetch(`http://data-api-jet.vercel.app/blogs?q=${search}`);
  const blogs: BlogsType[] = await resBlogs.json();
  return {
    props: {
      products,
      blogs
    },
  };
};